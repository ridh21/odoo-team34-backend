// import { PrismaClient } from '@prisma/client';
// import { Request, Response } from 'express';

// const prisma = new PrismaClient();

// export const getFarmerStatisticsById = async (req: Request, res: Response): Promise<void> => {
//   try {
//     const { farmerId } = req.params;

//     if (!farmerId) {
//       res.status(400).json({ message: 'Farmer ID is required' });
//       return;
//     }

//     // Fetch total revenue generated by the farmer
//     const totalRevenue = await prisma.order.aggregate({
//       _sum: {
//         totalAmount: true,
//       },
//       where: {
//         farmerId,
//       },
//     });

//     // Fetch total number of orders by the farmer
//     const totalOrders = await prisma.order.count({
//       where: {
//         farmerId,
//       },
//     });

//     // Fetch total pending orders by the farmer
//     const pendingOrders = await prisma.order.count({
//       where: {
//         farmerId,
//         orderStatus: 'Pending',
//       },
//     });

//     // Example: Calculate changes (mocked for now)
//     const revenueChange = 3; // Replace with actual logic if needed
//     const ordersChange = 20; // Replace with actual logic if needed
//     const pendingChange = 0; // Replace with actual logic if needed

//     // Return the statistics
//     res.status(200).json({
//       totalRevenue: totalRevenue._sum.totalAmount || 0,
//       revenueChange,
//       totalOrders,
//       ordersChange,
//       pendingOrders,
//       pendingChange,
//     });
//   } catch (error) {
//     console.error('Error fetching farmer statistics:', error);
//     res.status(500).json({
//       message: 'Error fetching farmer statistics',
//       error: error instanceof Error ? error.message : 'Unknown error',
//     });
//   }
// };